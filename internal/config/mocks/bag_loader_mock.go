// Code generated by MockGen. DO NOT EDIT.
// Source: bag_loader.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	bag "github.com/amaurybrisou/mosychlos/pkg/bag"
	models "github.com/amaurybrisou/mosychlos/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBagLoader is a mock of BagLoader interface.
type MockBagLoader struct {
	ctrl     *gomock.Controller
	recorder *MockBagLoaderMockRecorder
}

// MockBagLoaderMockRecorder is the mock recorder for MockBagLoader.
type MockBagLoaderMockRecorder struct {
	mock *MockBagLoader
}

// NewMockBagLoader creates a new mock instance.
func NewMockBagLoader(ctrl *gomock.Controller) *MockBagLoader {
	mock := &MockBagLoader{ctrl: ctrl}
	mock.recorder = &MockBagLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBagLoader) EXPECT() *MockBagLoaderMockRecorder {
	return m.recorder
}

// LoadCustomerData mocks base method.
func (m *MockBagLoader) LoadCustomerData(ctx context.Context, bag bag.SharedBag) (*models.CustomerReportData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadCustomerData", ctx, bag)
	ret0, _ := ret[0].(*models.CustomerReportData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadCustomerData indicates an expected call of LoadCustomerData.
func (mr *MockBagLoaderMockRecorder) LoadCustomerData(ctx, bag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadCustomerData", reflect.TypeOf((*MockBagLoader)(nil).LoadCustomerData), ctx, bag)
}

// LoadFullData mocks base method.
func (m *MockBagLoader) LoadFullData(ctx context.Context, bag bag.SharedBag) (*models.FullReportData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadFullData", ctx, bag)
	ret0, _ := ret[0].(*models.FullReportData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadFullData indicates an expected call of LoadFullData.
func (mr *MockBagLoaderMockRecorder) LoadFullData(ctx, bag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadFullData", reflect.TypeOf((*MockBagLoader)(nil).LoadFullData), ctx, bag)
}

// LoadSystemData mocks base method.
func (m *MockBagLoader) LoadSystemData(ctx context.Context, bag bag.SharedBag) (*models.SystemReportData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadSystemData", ctx, bag)
	ret0, _ := ret[0].(*models.SystemReportData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadSystemData indicates an expected call of LoadSystemData.
func (mr *MockBagLoaderMockRecorder) LoadSystemData(ctx, bag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadSystemData", reflect.TypeOf((*MockBagLoader)(nil).LoadSystemData), ctx, bag)
}
