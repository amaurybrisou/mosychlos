// Code generated by MockGen. DO NOT EDIT.
// Source: report.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/amaurybrisou/mosychlos/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockReportGenerator is a mock of ReportGenerator interface.
type MockReportGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockReportGeneratorMockRecorder
}

// MockReportGeneratorMockRecorder is the mock recorder for MockReportGenerator.
type MockReportGeneratorMockRecorder struct {
	mock *MockReportGenerator
}

// NewMockReportGenerator creates a new mock instance.
func NewMockReportGenerator(ctrl *gomock.Controller) *MockReportGenerator {
	mock := &MockReportGenerator{ctrl: ctrl}
	mock.recorder = &MockReportGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReportGenerator) EXPECT() *MockReportGeneratorMockRecorder {
	return m.recorder
}

// GenerateCustomerReport mocks base method.
func (m *MockReportGenerator) GenerateCustomerReport(ctx context.Context, format models.ReportFormat) (*models.ReportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateCustomerReport", ctx, format)
	ret0, _ := ret[0].(*models.ReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateCustomerReport indicates an expected call of GenerateCustomerReport.
func (mr *MockReportGeneratorMockRecorder) GenerateCustomerReport(ctx, format interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateCustomerReport", reflect.TypeOf((*MockReportGenerator)(nil).GenerateCustomerReport), ctx, format)
}

// GenerateFullReport mocks base method.
func (m *MockReportGenerator) GenerateFullReport(ctx context.Context, format models.ReportFormat) (*models.ReportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateFullReport", ctx, format)
	ret0, _ := ret[0].(*models.ReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateFullReport indicates an expected call of GenerateFullReport.
func (mr *MockReportGeneratorMockRecorder) GenerateFullReport(ctx, format interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateFullReport", reflect.TypeOf((*MockReportGenerator)(nil).GenerateFullReport), ctx, format)
}

// GenerateSystemReport mocks base method.
func (m *MockReportGenerator) GenerateSystemReport(ctx context.Context, format models.ReportFormat) (*models.ReportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSystemReport", ctx, format)
	ret0, _ := ret[0].(*models.ReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateSystemReport indicates an expected call of GenerateSystemReport.
func (mr *MockReportGeneratorMockRecorder) GenerateSystemReport(ctx, format interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSystemReport", reflect.TypeOf((*MockReportGenerator)(nil).GenerateSystemReport), ctx, format)
}
