// Code generated by MockGen. DO NOT EDIT.
// Source: validator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/amaurybrisou/mosychlos/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockPortfolioValidator is a mock of PortfolioValidator interface.
type MockPortfolioValidator struct {
	ctrl     *gomock.Controller
	recorder *MockPortfolioValidatorMockRecorder
}

// MockPortfolioValidatorMockRecorder is the mock recorder for MockPortfolioValidator.
type MockPortfolioValidatorMockRecorder struct {
	mock *MockPortfolioValidator
}

// NewMockPortfolioValidator creates a new mock instance.
func NewMockPortfolioValidator(ctrl *gomock.Controller) *MockPortfolioValidator {
	mock := &MockPortfolioValidator{ctrl: ctrl}
	mock.recorder = &MockPortfolioValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPortfolioValidator) EXPECT() *MockPortfolioValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockPortfolioValidator) Validate(ctx context.Context, portfolio *models.Portfolio) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", ctx, portfolio)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockPortfolioValidatorMockRecorder) Validate(ctx, portfolio interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockPortfolioValidator)(nil).Validate), ctx, portfolio)
}
